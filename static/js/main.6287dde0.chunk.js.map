{"version":3,"sources":["pages/components/Table.tsx","api/fetch.js","pages/dashboard/utils.ts","pages/dashboard/useDashboard.tsx","pages/dashboard/Dashboard.tsx","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","onClickRow","useTable","useSortBy","getTableProps","headerGroups","rows","prepareRow","place","type","effect","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","column","Footer","getHeaderProps","render","row","i","onClick","getRowProps","cells","cell","getCellProps","fetchDatas","a","fetch","res","json","heroRarityWinByWinDiccionary","heroRarityDiccionary","calcWinDiff","hero","wbnbPrice","THCPrice","battleCap","heroRarity","price","calcUsdPrice","getVitaminatedHero","usdPrice","heroRarityString","winCalc","winDiffCalc","winBenefitTantPerCent","Math","trunc","needAlarm","silenceAlarm","useDashboard","useState","setwbnbPrice","setTHCPrice","isRefetchInterval","setIsRefetchInterval","heroes","setHeroes","herosPriceAlarm","setPriceAlarm","setNeedAlarm","Audio","alarm","Header","accessor","Cell","props","silenceHero","original","id","document","title","newHeroList","x","useQuery","then","result","newHeros","newHero","actualHero","find","h","refetchInterval","isLoading","iswbnbPriceLoading","toFixed","isTHCPriceLoading","useEffect","heros","mapHerosCalc","some","play","pause","Dashboard","herosPrice","setPrice","value","onChange","e","parseInt","target","window","open","refId","queryClient","QueryClient","App","client","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6287dde0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport BTable from \"react-bootstrap/Table\";\r\n\r\nimport { useSortBy, useTable } from \"react-table\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  onClickRow,\r\n}: {\r\n  columns: any;\r\n  data: any;\r\n  onClickRow: (row: any) => any;\r\n}) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <ReactTooltip place=\"left\" type=\"success\" effect=\"solid\" />\r\n\r\n      <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  data-tip={column.Footer}\r\n                  {...column.getHeaderProps()}\r\n                  // {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr onClick={() => onClickRow(row)} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </BTable>\r\n    </>\r\n  );\r\n}\r\n","export const fetchDatas = async (...args) => {\r\n    const res = await fetch(...args);\r\n    return await res.json();\r\n  }","const heroRarityWinByWinDiccionary: number[] = [];\r\nheroRarityWinByWinDiccionary[0] = 1.45;\r\nheroRarityWinByWinDiccionary[1] = 5;\r\nheroRarityWinByWinDiccionary[2] = 23.55;\r\n\r\nconst heroRarityDiccionary: string[] = [];\r\nheroRarityDiccionary[0] = \"Common\";\r\nheroRarityDiccionary[1] = \"Epic\";\r\nheroRarityDiccionary[2] = \"Legendary\";\r\n\r\nconst calcWinDiff = (hero: any, wbnbPrice: number, THCPrice: number) =>\r\n  hero.battleCap *\r\n    (heroRarityWinByWinDiccionary[hero.heroRarity] + 6) *\r\n    THCPrice -\r\n  (hero.price / 100000000) * wbnbPrice;\r\n\r\nconst calcUsdPrice = (hero: any, wbnbPrice: number) =>\r\n  (hero.price / 100000000) * wbnbPrice;\r\n\r\nexport function mapHerosCalc(\r\n  heros: Record<any, any>[],\r\n  wbnbPrice: number,\r\n  THCPrice: number\r\n) {\r\n  return heros.map((hero) => {\r\n    return getVitaminatedHero(hero, wbnbPrice, THCPrice);\r\n  });\r\n}\r\n\r\nexport const getVitaminatedHero = (\r\n  hero: any,\r\n  wbnbPrice: number,\r\n  THCPrice: number\r\n) => {\r\n  return {\r\n    ...hero,\r\n    usdPrice: calcUsdPrice(hero, wbnbPrice),\r\n    heroRarityString: `${heroRarityDiccionary[hero.heroRarity]} (${\r\n      heroRarityWinByWinDiccionary[hero.heroRarity]\r\n    } gTHC).`,\r\n    winCalc:\r\n      hero.battleCap *\r\n      (heroRarityWinByWinDiccionary[hero.heroRarity] + 6) *\r\n      THCPrice,\r\n    winDiffCalc: calcWinDiff(hero, wbnbPrice, THCPrice),\r\n    winBenefitTantPerCent: `${Math.trunc(\r\n      ((Math.trunc(calcWinDiff(hero, wbnbPrice, THCPrice)) -\r\n        Math.trunc(calcUsdPrice(hero, wbnbPrice))) /\r\n        Math.trunc(calcWinDiff(hero, wbnbPrice, THCPrice))) *\r\n        100\r\n    )}%.`,\r\n    needAlarm: (hero.price / 100000000) * wbnbPrice < 61,\r\n    silenceAlarm: false,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport _ from \"lodash\";\r\nimport { fetchDatas } from \"../../api/fetch\";\r\nimport { mapHerosCalc, getVitaminatedHero } from \"./utils\";\r\n\r\nexport const useDashboard = () => {\r\n  const [wbnbPrice, setwbnbPrice] = useState<number>(0);\r\n  const [THCPrice, setTHCPrice] = useState<number>(0);\r\n  const [isRefetchInterval, setIsRefetchInterval] = useState<boolean>(false);\r\n  const [heroes, setHeroes] = useState<any>();\r\n  const [herosPriceAlarm, setPriceAlarm] = useState<number>(61);\r\n  const [needAlarm, setNeedAlarm] = useState<boolean>(true);\r\n  const [alarm] = useState(\r\n    new Audio(\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\")\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Silence alarm\",\r\n      accessor: \"silenceAlarm\",\r\n      Cell: (props: any) => {\r\n        return (\r\n          <button onClick={() => silenceHero(props.row.original.id)}>\r\n            {!props.row.original.silenceAlarm ? \"🔊\" : \"🔈\"}\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Price (wbnb)\",\r\n      accessor: \"price\",\r\n    },\r\n    {\r\n      Header: \"Hero Cost ($)\",\r\n      accessor: \"usdPrice\",\r\n    },\r\n    {\r\n      Header: \"Maximum Battles\",\r\n      accessor: \"battleCap\",\r\n    },\r\n    {\r\n      Header: \"Hero Rarity\",\r\n      accessor: \"heroRarityString\",\r\n    },\r\n    {\r\n      Header: \"Maximum $ Win By Hero Rarity\",\r\n      accessor: \"winCalc\",\r\n      Footer: \"(Hero cost by rarity + maximum gTHC by win) x THC price\",\r\n    },\r\n    {\r\n      Header: \"Maximum Benefits \",\r\n      accessor: \"winDiffCalc\",\r\n      Footer: \"Hero cost - Maximum $ by Win\",\r\n    },\r\n    {\r\n      Header: \"Benefits %\",\r\n      accessor: \"winBenefitTantPerCent\",\r\n      Footer: \"100*(P-C)/P\",\r\n    },\r\n  ];\r\n\r\n  document.title = \"Thetan-sniper\";\r\n\r\n  const silenceHero = (id: any) => {\r\n    const newHeroList = heroes.map((x: any) => {\r\n      return id === x.id ? { ...x, silenceAlarm: !x.silenceAlarm } : x;\r\n    });\r\n    setHeroes(newHeroList);\r\n  };\r\n\r\n  const { data, isLoading } = useQuery(\r\n    \"heros\",\r\n    () =>\r\n      fetchDatas(\r\n        \"https://data.thetanarena.com/thetan/v1/nif/search?sort=PriceAsc&size=3852\"\r\n      ).then((result) => {\r\n        if (!heroes) {\r\n          return result;\r\n        }\r\n\r\n        const newHeros = result.data.map((newHero: any) => {\r\n          const actualHero = heroes.find((h: any) => h.id === newHero.id);\r\n          if (actualHero) {\r\n            return actualHero;\r\n          }\r\n          return getVitaminatedHero(newHero, wbnbPrice, THCPrice);\r\n        });\r\n        setHeroes(newHeros);\r\n      }),\r\n    {\r\n      refetchInterval: isRefetchInterval ? 2000 : false,\r\n    }\r\n  );\r\n\r\n  const { isLoading: iswbnbPriceLoading } = useQuery(\r\n    \"wbnbPrice\",\r\n    () =>\r\n      fetchDatas(\r\n        \"https://exchange.thetanarena.com/exchange/v1/currency/price/32\"\r\n      ).then((result) => {\r\n        setwbnbPrice(result.data.toFixed(2));\r\n      }),\r\n    {\r\n      refetchInterval: isRefetchInterval ? 10000 : false,\r\n    }\r\n  );\r\n\r\n  const { isLoading: isTHCPriceLoading } = useQuery(\r\n    \"THCPrice\",\r\n    () =>\r\n      fetchDatas(\r\n        \"https://exchange.thetanarena.com/exchange/v1/currency/price/11\"\r\n      ).then((result) => {\r\n        setTHCPrice(result.data.toFixed(2));\r\n      }),\r\n    {\r\n      refetchInterval: isRefetchInterval ? 10000 : false,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (data && data.data && !heroes) ||\r\n      (heroes && !heroes[0].winCalc && wbnbPrice && THCPrice)\r\n    ) {\r\n      const heroes = mapHerosCalc(data.data, wbnbPrice, THCPrice);\r\n      setHeroes(heroes);\r\n    }\r\n  }, [data, wbnbPrice, THCPrice, heroes]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      needAlarm &&\r\n      heroes &&\r\n      heroes.some((x: any) => x.needAlarm && !x.silenceAlarm)\r\n    ) {\r\n      alarm.play();\r\n    } else {\r\n      alarm.pause();\r\n    }\r\n  }, [heroes, alarm, needAlarm]);\r\n\r\n  return [\r\n    wbnbPrice,\r\n    heroes,\r\n    isLoading,\r\n    iswbnbPriceLoading,\r\n    THCPrice,\r\n    isTHCPriceLoading,\r\n    columns,\r\n    isRefetchInterval,\r\n    setIsRefetchInterval,\r\n    herosPriceAlarm,\r\n    setPriceAlarm,\r\n    needAlarm,\r\n    setNeedAlarm,\r\n  ];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Table from \"../components/Table\";\r\nimport { useDashboard } from \"./useDashboard\";\r\n\r\nexport default function Dashboard() {\r\n  const [\r\n    wbnbPrice,\r\n    heroes,\r\n    isLoading,\r\n    iswbnbPriceLoading,\r\n    THCPrice,\r\n    isTHCPriceLoading,\r\n    columns,\r\n    isRefetchInterval,\r\n    setIsRefetchInterval,\r\n    herosPriceAlarm,\r\n    setPriceAlarm,\r\n    needAlarm,\r\n    setNeedAlarm,\r\n  ] = useDashboard();\r\n  const [herosPrice, setPrice] = useState<number>(herosPriceAlarm);\r\n\r\n  return (\r\n    <>\r\n      <div>WBNB Price: {!iswbnbPriceLoading && wbnbPrice}$</div>\r\n      <div>THC Price: {!isTHCPriceLoading && THCPrice}$</div>\r\n      Alarm --{\">\"}\r\n      <input\r\n        value={herosPrice}\r\n        onChange={(e) => setPrice(parseInt(e.target.value))}\r\n      />\r\n      <button onClick={() => setPriceAlarm(herosPrice)}>\r\n        {`🔊 => ${herosPriceAlarm}`}\r\n      </button>\r\n      <button onClick={() => setNeedAlarm(!needAlarm)}>\r\n        {needAlarm ? \"🔊\" : \"🔈\"}\r\n      </button>\r\n      <br></br>\r\n      <button onClick={() => setIsRefetchInterval(!isRefetchInterval)}>\r\n        {isRefetchInterval ? \"⏸\" : \"▶\"}\r\n      </button>\r\n      <br></br>\r\n      <div>\r\n        {!isLoading && heroes && (\r\n          <Table\r\n            columns={columns}\r\n            data={heroes}\r\n            onClickRow={(row: any) =>\r\n              window.open(\r\n                `https://marketplace.thetanarena.com/item/${row.original.refId}`\r\n              )\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport Dashboard from \"./pages/dashboard/Dashboard\";\r\n\r\nconst queryClient = new QueryClient();\r\n// npm run deploy\r\nexport default function App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n        <Dashboard />\r\n      </Router>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}